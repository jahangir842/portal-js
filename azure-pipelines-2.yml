# Node.js Express Web App to Linux on Azure
# Build a Node.js Express app and deploy it to Azure as a Linux web app.

trigger:
- main

variables:
  azureSubscription: '20db7cd0-8bbe-432a-81fc-c623d12a0672'
  webAppName: 'portal-js-jagz-dev'
  environmentName: 'dev'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      name: default

    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '22.x'
      displayName: 'Install Node.js'

    - script: |
        npm install
        npm run build --if-present
        npm run test --if-present
      displayName: 'npm install, build and test'

    # Copy only necessary files (this excludes .git, node_modules, etc.)
    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)'
        Contents: |
          package*.json
          *.js
          views/**
          public/**
          routes/**
          bin/**
        TargetFolder: '$(Build.ArtifactStagingDirectory)'

    # Check what we're about to publish
    - script: |
        echo "=== Files to be deployed ==="
        find $(Build.ArtifactStagingDirectory) -type f -exec ls -lh {} +
        echo "=== Total size ==="
        du -sh $(Build.ArtifactStagingDirectory)
      displayName: 'Verify deployment package'

    # Publish the artifact
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: Deploy
    displayName: Deploy
    environment: $(environmentName)
    pool:
      name: default
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebApp@1
            displayName: 'Azure Web App Deploy: portal-js-jagz'
            inputs:
              azureSubscription: $(azureSubscription)
              appType: webAppLinux
              appName: $(webAppName)
              runtimeStack: 'NODE|22-lts'
              package: $(Pipeline.Workspace)/drop
              startUpCommand: 'npm run start'